//Write an aggregate to group wands by their maker so that we'll get a list of unique makers.

db.wands.aggregate([
  {"$group":{"_id":"$maker"}}
  
]);

SELECT maker FROM wands GROUP BY maker;

//Write an aggregate that groups wands by their damage.magic,
//Add an accumulator with a wand_count field to count the number of wands per damage.magic score.
db.wands.aggregate([
  { "$group":{ 
               "_id":"$damage.magic",
               "wand_count":{"$sum":1}
              }
  }
   
]);

SELECT COUNT(damage.magic) AS wand_count GROUP BY damage.magic;

//Write an aggregate that groups our wands by the maker field.
//Add an accumulator with the total_cost field that sums the price for each wand per maker.
db.wands.aggregate([
  {
     "$group":{
          "_id":"$maker",
           "total_cost":{"$sum":"$price"}
     }
  }
  
]);

SELECT SUM(price) AS total_cost FROM wands GROUP BY maker ;

//Write an aggregate to group wands by their level_required.
//Add an accumulator with a field named price_average to get the average price for the wands per level.

db.wands.aggregate([
  
  {
    "$group":{
      "_id":"$level_required",
      "price_average":{"$avg":"$price"}
    }
  }
])

SELECT AVG(price) AS   price_average FROM wands GROUP BY level_required ; 


//Write an aggregate to group wands by their maker
//Add an accumulator with the field total_wands to sum the number of wands each maker has.
//Now add an accumulator with the field max_magic that finds that greatest damage.magic per maker
//Lastly, add one more accumulator with the field lowest_price that finds the lowest wand price per maker

db.wands.aggregate([
  {
    "$group":{
        "_id":"$maker",
        "total_wands":{"$sum":1},
        "max_magic":{"$max":"$damage.magic"},
        "lowest_price":{"$min":"$price"}
    }
  }
])

SELECT COUNT(maker) AS total_wands,MAX(damage.magic) AS max_magic,  MIN(price) AS lowest_price FROM wands GROUP BY maker ; 

//Write an aggregate that will only match wands that have "Air Bolt" in their list of powers
//Add another aggregate stage to group the data by their maker.
//Add an accumulator with a field named lowest_level that finds the lowest level_required per maker

db.wands.aggregate([
  { "$match":{"powers":"Air Bolt"}},
  {"$group":{
            "_id":"$maker",
            "lowest_level":{"$min":"$level_required"}
                            
             }
  }
])

SELECT MIN(level_required) FROM wands  WHERE powers="Air Bolt" GROUP BY maker ;

//Write an aggregate to match wands that have a price that is less than 50
//Add the aggregate stage to group the wands by their 
//Add an accumulator with a field named average_magic to find the average damage.magic per maker using the $avg accumulator.
//Now that we've got our data all set, let's filter it down further.
//Below the existing $match and $group aggregates, add another $match aggregate so that we're only retrieving results with an average_magic that is greater than 40
db.wands.aggregate([
  {"$match":{"price":{"$lt":50}}},
  {"$group":
          {
            "_id":"$maker",
            "average_magic":{"$avg":"$damage.magic"} 
          }
   
  },
  {"$match": {"average_magic": {"$gt": 40}}}
])

SELECT AVG(damage.magic) AS average_magic FROM wands  WHERE price<50 AND average_magic>40  GROUP BY maker ;

//Write an aggregate that finds wands that have a level_required that's less than or equal to 5
//Add the aggregate stage to group the wands by their maker.
//Add an accumulator with the field max_damage that finds the max damage.magic per maker
//Now that we have the bulk of our data, let's go ahead and sort the max_damage in descending order.
//Add a limit stage so that we only find the first 4 results. After all, we don't have all day to look through wands!
//There's one more stage we can add to our pipeline to make sure it's fully optimized. Since we only need the maker and damage.magic fields, add a $project stage that only passes those fields along to the rest of operators.

db.wands.aggregate([
  {"$match":{"level_required":{"$lte":5}}},
  {"$project":{"_id":false,"maker":true,"damage.magic":true }},
  {"$group":{
              "_id":"$maker",
              "max_damage":{"$max":"$damage.magic"}
            }
  },
  {"$sort":{"max_damage":-1}},
  {"$limit":4},
  
 
])

SELECT  maker,damage.magic, MAX(damage.magic) AS max_damage FROM wands WHERE level_required<=5  GROUP BY maker ORDER BY max_damage DESC LIMIT 4 ;
